{"ast":null,"code":"import _objectSpread from \"/Users/aschulte/Desktop/mockups/auth-starter/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/aschulte/Desktop/mockups/auth-starter/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/aschulte/Desktop/mockups/auth-starter/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/aschulte/Desktop/mockups/auth-starter/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/aschulte/Desktop/mockups/auth-starter/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/aschulte/Desktop/mockups/auth-starter/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/aschulte/Desktop/mockups/auth-starter/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/aschulte/Desktop/mockups/auth-starter/src/components/Generate/index.js\";\nimport React, { Component } from 'react';\nimport DayPickerInput from \"react-day-picker/DayPickerInput\";\nimport \"react-day-picker/lib/style.css\";\nimport { formatDate, parseDate } from \"react-day-picker/moment\";\nimport \"moment/locale/it\";\nimport QRCode from 'qrcode-react';\nimport { Header, Input, Form, Button } from 'semantic-ui-react';\nvar INITIAL_STATE = {\n  startDate: undefined,\n  endDate: undefined,\n  uniqueID: '',\n  error: null\n};\n\nvar GenerateQRCode =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(GenerateQRCode, _Component);\n\n  function GenerateQRCode(props) {\n    var _this;\n\n    _classCallCheck(this, GenerateQRCode);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(GenerateQRCode).call(this, props));\n\n    _this.onSubmit = function (event) {\n      console.log(_this.uniqueID);\n      console.log(_this.state.startDate);\n      console.log(_this.state.endDate);\n    };\n\n    _this.onStartChange = function (startDate) {\n      _this.setState({\n        startDate: startDate\n      });\n    };\n\n    _this.onEndChange = function (endDate) {\n      _this.setState({\n        endDate: endDate\n      });\n    };\n\n    _this.state = _objectSpread({}, INITIAL_STATE);\n    _this.onStartChange = _this.onStartChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onEndChange = _this.onEndChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(GenerateQRCode, [{\n    key: \"render\",\n    value: function render() {\n      this.uniqueID = '1234567890123456789012345678901234567890';\n      var _this$state = this.state,\n          startDate = _this$state.startDate,\n          endDate = _this$state.endDate,\n          error = _this$state.error;\n      var isInvalid = startDate === null || endDate === null;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(Header, {\n        as: \"h1\",\n        textAlign: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \"Generate QR Code\"), React.createElement(Form, {\n        onSubmit: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(Form.Field, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \"Title of event\"), React.createElement(Input, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      })), React.createElement(Form.Field, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \"Select Event Dates\"), React.createElement(DayPickerInput, {\n        formatDate: formatDate,\n        parseDate: parseDate,\n        placeholder: \"\".concat(formatDate(new Date())),\n        value: startDate,\n        onDayChange: this.onStartChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      })), React.createElement(Form.Field, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(DayPickerInput, {\n        formatDate: formatDate,\n        parseDate: parseDate,\n        placeholder: \"\".concat(formatDate(new Date())),\n        value: endDate,\n        onDayChange: this.onEndChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      })), error && React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, error.message)), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }), React.createElement(QRCode, {\n        level: \"Q\",\n        style: {\n          width: 256\n        },\n        value: JSON.stringify({\n          uniqueID: this.uniqueID,\n          startDate: startDate,\n          endDate: endDate\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return GenerateQRCode;\n}(Component);\n\nexport { GenerateQRCode as default };","map":{"version":3,"sources":["/Users/aschulte/Desktop/mockups/auth-starter/src/components/Generate/index.js"],"names":["React","Component","DayPickerInput","formatDate","parseDate","QRCode","Header","Input","Form","Button","INITIAL_STATE","startDate","undefined","endDate","uniqueID","error","GenerateQRCode","props","onSubmit","event","console","log","state","onStartChange","setState","onEndChange","bind","isInvalid","Date","message","width","JSON","stringify"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport DayPickerInput from \"react-day-picker/DayPickerInput\";\nimport \"react-day-picker/lib/style.css\";\nimport { formatDate, parseDate } from \"react-day-picker/moment\";\nimport \"moment/locale/it\";\nimport QRCode from'qrcode-react';\nimport { Header, Input, Form, Button } from 'semantic-ui-react'\n\nconst INITIAL_STATE = {\n    startDate: undefined,\n    endDate: undefined,\n    uniqueID: '',\n    error: null,\n  };\n\n  export default class GenerateQRCode extends Component {\n    constructor(props) {\n      super(props);\n      this.state = { ...INITIAL_STATE };\n      this.onStartChange = this.onStartChange.bind(this);\n      this.onEndChange = this.onEndChange.bind(this);\n    }\n  \n    onSubmit = event => {\n      console.log(this.uniqueID)\n      console.log(this.state.startDate)\n      console.log(this.state.endDate)\n    };\n  \n    onStartChange = (startDate) => {\n      this.setState({startDate});\n    };\n\n    onEndChange = (endDate) => {\n      this.setState({endDate});\n    };\n  \n    render() {\n      this.uniqueID = '1234567890123456789012345678901234567890'\n      const { startDate, endDate, error } = this.state;\n      const isInvalid = startDate === null || endDate === null;\n      \n      return (\n    <div>\n    <Header as='h1' textAlign='center'>Generate QR Code</Header>\n      <Form onSubmit={this.onSubmit}>\n      <Form.Field>\n        <label>Title of event</label>\n        <Input/>\n        </Form.Field>\n        <Form.Field>\n        <label>Select Event Dates</label>\n        <DayPickerInput\n              formatDate={formatDate}\n              parseDate={parseDate}\n              placeholder={`${formatDate(new Date())}`}\n              value={startDate}\n              onDayChange={this.onStartChange}\n            />\n        </Form.Field>\n        <Form.Field>\n        <DayPickerInput\n                formatDate={formatDate}\n                parseDate={parseDate}\n                placeholder={`${formatDate(new Date())}`}\n                value = {endDate}\n                onDayChange={this.onEndChange}\n              />\n        </Form.Field>\n        {error && <p>{error.message}</p>}\n      </Form>\n      <br></br>\n      <br></br>\n      <QRCode\n            level=\"Q\"\n            style={{ width: 256 }}\n            value={JSON.stringify({\n              uniqueID: this.uniqueID,\n              startDate: startDate,\n              endDate: endDate\n              })}\n             />\n      </div>\n);\n}}"]},"metadata":{},"sourceType":"module"}