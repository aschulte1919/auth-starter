{"ast":null,"code":"import _defineProperty from \"/Users/aschulte/Desktop/mockups/react-redux-firebase-authentication/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/aschulte/Desktop/mockups/react-redux-firebase-authentication/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/aschulte/Desktop/mockups/react-redux-firebase-authentication/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/aschulte/Desktop/mockups/react-redux-firebase-authentication/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/aschulte/Desktop/mockups/react-redux-firebase-authentication/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/aschulte/Desktop/mockups/react-redux-firebase-authentication/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/aschulte/Desktop/mockups/react-redux-firebase-authentication/src/components/Account/index.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'recompose';\nimport { Button, Form, Input, Header, Icon } from 'semantic-ui-react';\nimport { withAuthorization, withEmailVerification } from '../Session';\nimport { PasswordForgetForm } from '../PasswordForget';\nimport PasswordChangeForm from '../PasswordChange';\n\nvar AccountPage = function AccountPage(_ref) {\n  var authUser = _ref.authUser;\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, React.createElement(Header, {\n    as: \"h2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(Icon, {\n    name: \"settings\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }), React.createElement(Header.Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, \"Account Settings\", React.createElement(Header.Subheader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, \"Manage your preferences\"))), React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"Account: \", authUser.name), React.createElement(PasswordForgetForm, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }), React.createElement(PasswordChangeForm, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }));\n};\n\nvar DefaultLoginToggle =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(DefaultLoginToggle, _Component);\n\n  function DefaultLoginToggle(props) {\n    var _this;\n\n    _classCallCheck(this, DefaultLoginToggle);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DefaultLoginToggle).call(this, props));\n\n    _this.onSubmit = function (event) {\n      event.preventDefault();\n\n      _this.props.onLink(_this.state.passwordOne);\n\n      _this.setState({\n        passwordOne: '',\n        passwordTwo: ''\n      });\n    };\n\n    _this.onChange = function (event) {\n      _this.setState(_defineProperty({}, event.target.name, event.target.value));\n    };\n\n    _this.state = {\n      passwordOne: '',\n      passwordTwo: ''\n    };\n    return _this;\n  }\n\n  _createClass(DefaultLoginToggle, [{\n    key: \"render\",\n    value: function render() {\n      var signInMethod = this.props.signInMethod;\n      var _this$state = this.state,\n          passwordOne = _this$state.passwordOne,\n          passwordTwo = _this$state.passwordTwo;\n      var isInvalid = passwordOne !== passwordTwo || passwordOne === '';\n      return React.createElement(Form, {\n        onSubmit: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(Input, {\n        name: \"passwordOne\",\n        value: passwordOne,\n        onChange: this.onChange,\n        type: \"password\",\n        placeholder: \"New Password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }), React.createElement(Input, {\n        name: \"passwordTwo\",\n        value: passwordTwo,\n        onChange: this.onChange,\n        type: \"password\",\n        placeholder: \"Confirm New Password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }), React.createElement(Button, {\n        disabled: isInvalid,\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"Link \", signInMethod.id));\n    }\n  }]);\n\n  return DefaultLoginToggle;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    authUser: state.sessionState.authUser\n  };\n};\n\nvar condition = function condition(authUser) {\n  return !!authUser;\n};\n\nexport default compose(connect(mapStateToProps), withEmailVerification, withAuthorization(condition))(AccountPage);","map":{"version":3,"sources":["/Users/aschulte/Desktop/mockups/react-redux-firebase-authentication/src/components/Account/index.js"],"names":["React","Component","connect","compose","Button","Form","Input","Header","Icon","withAuthorization","withEmailVerification","PasswordForgetForm","PasswordChangeForm","AccountPage","authUser","name","DefaultLoginToggle","props","onSubmit","event","preventDefault","onLink","state","passwordOne","setState","passwordTwo","onChange","target","value","signInMethod","isInvalid","id","mapStateToProps","sessionState","condition"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'recompose';\nimport { Button, Form, Input, Header, Icon } from 'semantic-ui-react'\n\nimport { withAuthorization, withEmailVerification } from '../Session';\nimport { PasswordForgetForm } from '../PasswordForget';\nimport PasswordChangeForm from '../PasswordChange';\n\nconst AccountPage = ({ authUser }) => (\n  <div>\n  <Header as='h2'>\n    <Icon name='settings' />\n    <Header.Content>\n      Account Settings\n      <Header.Subheader>Manage your preferences</Header.Subheader>\n    </Header.Content>\n  </Header>\n    <h1>Account: {authUser.name}</h1>\n    <PasswordForgetForm />\n    <PasswordChangeForm />\n  </div>\n);\n\nclass DefaultLoginToggle extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { passwordOne: '', passwordTwo: '' };\n  }\n\n  onSubmit = event => {\n    event.preventDefault();\n\n    this.props.onLink(this.state.passwordOne);\n    this.setState({ passwordOne: '', passwordTwo: '' });\n  };\n\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  render() {\n    const {\n      signInMethod,\n    } = this.props;\n\n    const { passwordOne, passwordTwo } = this.state;\n\n    const isInvalid =\n      passwordOne !== passwordTwo || passwordOne === '';\n\n    return (\n      <Form onSubmit={this.onSubmit}>\n        <Input\n          name=\"passwordOne\"\n          value={passwordOne}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"New Password\"\n        />\n        <Input\n          name=\"passwordTwo\"\n          value={passwordTwo}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"Confirm New Password\"\n        />\n\n        <Button disabled={isInvalid} type=\"submit\">\n          Link {signInMethod.id}\n        </Button>\n      </Form>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  authUser: state.sessionState.authUser,\n});\n\nconst condition = authUser => !!authUser;\n\nexport default compose(\n  connect(mapStateToProps),\n  withEmailVerification,\n  withAuthorization(condition),\n)(AccountPage);\n"]},"metadata":{},"sourceType":"module"}