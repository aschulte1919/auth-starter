{"ast":null,"code":"import _objectSpread from \"/Users/aschulte/Desktop/mockups/react-redux-firebase-authentication/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _objectWithoutProperties from \"/Users/aschulte/Desktop/mockups/react-redux-firebase-authentication/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _classCallCheck from \"/Users/aschulte/Desktop/mockups/react-redux-firebase-authentication/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/aschulte/Desktop/mockups/react-redux-firebase-authentication/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/aschulte/Desktop/mockups/react-redux-firebase-authentication/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/aschulte/Desktop/mockups/react-redux-firebase-authentication/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/aschulte/Desktop/mockups/react-redux-firebase-authentication/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/aschulte/Desktop/mockups/react-redux-firebase-authentication/src/components/Messages/Messages.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'recompose';\nimport { Button, Form, Input } from 'semantic-ui-react';\nimport { withFirebase } from '../Firebase';\nimport MessageList from './MessageList';\n\nvar Messages =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Messages, _Component);\n\n  function Messages(props) {\n    var _this;\n\n    _classCallCheck(this, Messages);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Messages).call(this, props));\n\n    _this.onListenForMessages = function () {\n      _this.props.firebase.messages().orderByChild('createdAt').limitToLast(_this.props.limit).on('value', function (snapshot) {\n        _this.props.onSetMessages(snapshot.val());\n\n        _this.setState({\n          loading: false\n        });\n      });\n    };\n\n    _this.onChangeText = function (event) {\n      _this.setState({\n        text: event.target.value\n      });\n    };\n\n    _this.onCreateMessage = function (event, authUser) {\n      _this.props.firebase.messages().push({\n        text: _this.state.text,\n        userId: authUser.uid,\n        createdAt: _this.props.firebase.serverValue.TIMESTAMP\n      });\n\n      _this.setState({\n        text: ''\n      });\n\n      event.preventDefault();\n    };\n\n    _this.onEditMessage = function (message, text) {\n      var uid = message.uid,\n          messageSnapshot = _objectWithoutProperties(message, [\"uid\"]);\n\n      _this.props.firebase.message(message.uid).set(_objectSpread({}, messageSnapshot, {\n        text: text,\n        editedAt: _this.props.firebase.serverValue.TIMESTAMP\n      }));\n    };\n\n    _this.onRemoveMessage = function (uid) {\n      _this.props.firebase.message(uid).remove();\n    };\n\n    _this.onNextPage = function () {\n      _this.props.onSetMessagesLimit(_this.props.limit + 5);\n    };\n\n    _this.state = {\n      text: '',\n      loading: false\n    };\n    return _this;\n  }\n\n  _createClass(Messages, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (!this.props.messages.length) {\n        this.setState({\n          loading: true\n        });\n      }\n\n      this.onListenForMessages();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(props) {\n      if (props.limit !== this.props.limit) {\n        this.onListenForMessages();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.props.firebase.messages().off();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var messages = this.props.messages;\n      var _this$state = this.state,\n          text = _this$state.text,\n          loading = _this$state.loading;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, !loading && messages && React.createElement(Button, {\n        onClick: this.onNextPage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, \"More\"), loading && React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, \"Loading ...\"), messages && React.createElement(MessageList, {\n        authUser: this.props.authUser,\n        messages: messages,\n        onEditMessage: this.onEditMessage,\n        onRemoveMessage: this.onRemoveMessage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }), !messages && React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, \"There are no messages ...\"), React.createElement(Form, {\n        onSubmit: function onSubmit(event) {\n          return _this2.onCreateMessage(event, _this2.props.authUser);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"text\",\n        value: text,\n        onChange: this.onChangeText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }), React.createElement(Button, {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, \"Send\")));\n    }\n  }]);\n\n  return Messages;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    authUser: state.sessionState.authUser,\n    messages: Object.keys(state.messageState.messages || {}).map(function (key) {\n      return _objectSpread({}, state.messageState.messages[key], {\n        uid: key\n      });\n    }),\n    limit: state.messageState.limit\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onSetMessages: function onSetMessages(messages) {\n      return dispatch({\n        type: 'MESSAGES_SET',\n        messages: messages\n      });\n    },\n    onSetMessagesLimit: function onSetMessagesLimit(limit) {\n      return dispatch({\n        type: 'MESSAGES_LIMIT_SET',\n        limit: limit\n      });\n    }\n  };\n};\n\nexport default compose(withFirebase, connect(mapStateToProps, mapDispatchToProps))(Messages);","map":{"version":3,"sources":["/Users/aschulte/Desktop/mockups/react-redux-firebase-authentication/src/components/Messages/Messages.js"],"names":["React","Component","connect","compose","Button","Form","Input","withFirebase","MessageList","Messages","props","onListenForMessages","firebase","messages","orderByChild","limitToLast","limit","on","snapshot","onSetMessages","val","setState","loading","onChangeText","event","text","target","value","onCreateMessage","authUser","push","state","userId","uid","createdAt","serverValue","TIMESTAMP","preventDefault","onEditMessage","message","messageSnapshot","set","editedAt","onRemoveMessage","remove","onNextPage","onSetMessagesLimit","length","off","mapStateToProps","sessionState","Object","keys","messageState","map","key","mapDispatchToProps","dispatch","type"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'recompose';\nimport { Button, Form, Input } from 'semantic-ui-react'\n\nimport { withFirebase } from '../Firebase';\nimport MessageList from './MessageList';\n\nclass Messages extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      text: '',\n      loading: false,\n    };\n  }\n\n  componentDidMount() {\n    if (!this.props.messages.length) {\n      this.setState({ loading: true });\n    }\n\n    this.onListenForMessages();\n  }\n\n  componentDidUpdate(props) {\n    if (props.limit !== this.props.limit) {\n      this.onListenForMessages();\n    }\n  }\n\n  onListenForMessages = () => {\n    this.props.firebase\n      .messages()\n      .orderByChild('createdAt')\n      .limitToLast(this.props.limit)\n      .on('value', snapshot => {\n        this.props.onSetMessages(snapshot.val());\n\n        this.setState({ loading: false });\n      });\n  };\n\n  componentWillUnmount() {\n    this.props.firebase.messages().off();\n  }\n\n  onChangeText = event => {\n    this.setState({ text: event.target.value });\n  };\n\n  onCreateMessage = (event, authUser) => {\n    this.props.firebase.messages().push({\n      text: this.state.text,\n      userId: authUser.uid,\n      createdAt: this.props.firebase.serverValue.TIMESTAMP,\n    });\n\n    this.setState({ text: '' });\n\n    event.preventDefault();\n  };\n\n  onEditMessage = (message, text) => {\n    const { uid, ...messageSnapshot } = message;\n\n    this.props.firebase.message(message.uid).set({\n      ...messageSnapshot,\n      text,\n      editedAt: this.props.firebase.serverValue.TIMESTAMP,\n    });\n  };\n\n  onRemoveMessage = uid => {\n    this.props.firebase.message(uid).remove();\n  };\n\n  onNextPage = () => {\n    this.props.onSetMessagesLimit(this.props.limit + 5);\n  };\n\n  render() {\n    const { messages } = this.props;\n    const { text, loading } = this.state;\n\n    return (\n      <div>\n        {!loading && messages && (\n          <Button onClick={this.onNextPage}>\n            More\n          </Button>\n        )}\n\n        {loading && <div>Loading ...</div>}\n\n        {messages && (\n          <MessageList\n            authUser={this.props.authUser}\n            messages={messages}\n            onEditMessage={this.onEditMessage}\n            onRemoveMessage={this.onRemoveMessage}\n          />\n        )}\n\n        {!messages && <div>There are no messages ...</div>}\n\n        <Form\n          onSubmit={event =>\n            this.onCreateMessage(event, this.props.authUser)\n          }\n        >\n          <Input\n            type=\"text\"\n            value={text}\n            onChange={this.onChangeText}\n          />\n          <Button type=\"submit\">Send</Button>\n        </Form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  authUser: state.sessionState.authUser,\n  messages: Object.keys(state.messageState.messages || {}).map(\n    key => ({\n      ...state.messageState.messages[key],\n      uid: key,\n    }),\n  ),\n  limit: state.messageState.limit,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onSetMessages: messages =>\n    dispatch({ type: 'MESSAGES_SET', messages }),\n  onSetMessagesLimit: limit =>\n    dispatch({ type: 'MESSAGES_LIMIT_SET', limit }),\n});\n\nexport default compose(\n  withFirebase,\n  connect(\n    mapStateToProps,\n    mapDispatchToProps,\n  ),\n)(Messages);\n"]},"metadata":{},"sourceType":"module"}