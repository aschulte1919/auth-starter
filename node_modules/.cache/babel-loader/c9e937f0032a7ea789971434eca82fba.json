{"ast":null,"code":"import _defineProperty from \"/Users/aschulte/Desktop/mockups/react-redux-firebase-authentication/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/aschulte/Desktop/mockups/react-redux-firebase-authentication/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/aschulte/Desktop/mockups/react-redux-firebase-authentication/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/aschulte/Desktop/mockups/react-redux-firebase-authentication/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/aschulte/Desktop/mockups/react-redux-firebase-authentication/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/aschulte/Desktop/mockups/react-redux-firebase-authentication/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/aschulte/Desktop/mockups/react-redux-firebase-authentication/src/components/Account/index.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'recompose';\nimport { Button, Form, Input } from 'semantic-ui-react';\nimport { withAuthorization, withEmailVerification } from '../Session';\nimport { withFirebase } from '../Firebase';\nimport { PasswordForgetForm } from '../PasswordForget';\nimport PasswordChangeForm from '../PasswordChange';\n\nvar AccountPage = function AccountPage(_ref) {\n  var authUser = _ref.authUser;\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, \"Account: \", authUser.email), React.createElement(PasswordForgetForm, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }), React.createElement(PasswordChangeForm, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }));\n};\n\nvar DefaultLoginToggle =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(DefaultLoginToggle, _Component);\n\n  function DefaultLoginToggle(props) {\n    var _this;\n\n    _classCallCheck(this, DefaultLoginToggle);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DefaultLoginToggle).call(this, props));\n\n    _this.onSubmit = function (event) {\n      event.preventDefault();\n\n      _this.props.onLink(_this.state.passwordOne);\n\n      _this.setState({\n        passwordOne: '',\n        passwordTwo: ''\n      });\n    };\n\n    _this.onChange = function (event) {\n      _this.setState(_defineProperty({}, event.target.name, event.target.value));\n    };\n\n    _this.state = {\n      passwordOne: '',\n      passwordTwo: ''\n    };\n    return _this;\n  }\n\n  _createClass(DefaultLoginToggle, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          onlyOneLeft = _this$props.onlyOneLeft,\n          isEnabled = _this$props.isEnabled,\n          signInMethod = _this$props.signInMethod,\n          onUnlink = _this$props.onUnlink;\n      var _this$state = this.state,\n          passwordOne = _this$state.passwordOne,\n          passwordTwo = _this$state.passwordTwo;\n      var isInvalid = passwordOne !== passwordTwo || passwordOne === '';\n      return React.createElement(Form, {\n        onSubmit: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(Input, {\n        name: \"passwordOne\",\n        value: passwordOne,\n        onChange: this.onChange,\n        type: \"password\",\n        placeholder: \"New Password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }), React.createElement(Input, {\n        name: \"passwordTwo\",\n        value: passwordTwo,\n        onChange: this.onChange,\n        type: \"password\",\n        placeholder: \"Confirm New Password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }), React.createElement(Button, {\n        disabled: isInvalid,\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"Link \", signInMethod.id));\n    }\n  }]);\n\n  return DefaultLoginToggle;\n}(Component); // const LoginManagement = withFirebase(LoginManagementBase);\n\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    authUser: state.sessionState.authUser\n  };\n};\n\nvar condition = function condition(authUser) {\n  return !!authUser;\n};\n\nexport default compose(connect(mapStateToProps), withEmailVerification, withAuthorization(condition))(AccountPage);","map":{"version":3,"sources":["/Users/aschulte/Desktop/mockups/react-redux-firebase-authentication/src/components/Account/index.js"],"names":["React","Component","connect","compose","Button","Form","Input","withAuthorization","withEmailVerification","withFirebase","PasswordForgetForm","PasswordChangeForm","AccountPage","authUser","email","DefaultLoginToggle","props","onSubmit","event","preventDefault","onLink","state","passwordOne","setState","passwordTwo","onChange","target","name","value","onlyOneLeft","isEnabled","signInMethod","onUnlink","isInvalid","id","mapStateToProps","sessionState","condition"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'recompose';\nimport { Button, Form, Input } from 'semantic-ui-react'\n\nimport { withAuthorization, withEmailVerification } from '../Session';\nimport { withFirebase } from '../Firebase';\nimport { PasswordForgetForm } from '../PasswordForget';\nimport PasswordChangeForm from '../PasswordChange';\n\nconst AccountPage = ({ authUser }) => (\n  <div>\n    <h1>Account: {authUser.email}</h1>\n    <PasswordForgetForm />\n    <PasswordChangeForm />\n  </div>\n);\n\nclass DefaultLoginToggle extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { passwordOne: '', passwordTwo: '' };\n  }\n\n  onSubmit = event => {\n    event.preventDefault();\n\n    this.props.onLink(this.state.passwordOne);\n    this.setState({ passwordOne: '', passwordTwo: '' });\n  };\n\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  render() {\n    const {\n      onlyOneLeft,\n      isEnabled,\n      signInMethod,\n      onUnlink,\n    } = this.props;\n\n    const { passwordOne, passwordTwo } = this.state;\n\n    const isInvalid =\n      passwordOne !== passwordTwo || passwordOne === '';\n\n    return (\n      <Form onSubmit={this.onSubmit}>\n        <Input\n          name=\"passwordOne\"\n          value={passwordOne}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"New Password\"\n        />\n        <Input\n          name=\"passwordTwo\"\n          value={passwordTwo}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"Confirm New Password\"\n        />\n\n        <Button disabled={isInvalid} type=\"submit\">\n          Link {signInMethod.id}\n        </Button>\n      </Form>\n    );\n  }\n}\n\n// const LoginManagement = withFirebase(LoginManagementBase);\n\nconst mapStateToProps = state => ({\n  authUser: state.sessionState.authUser,\n});\n\nconst condition = authUser => !!authUser;\n\nexport default compose(\n  connect(mapStateToProps),\n  withEmailVerification,\n  withAuthorization(condition),\n)(AccountPage);\n"]},"metadata":{},"sourceType":"module"}