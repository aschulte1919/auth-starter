{"ast":null,"code":"import _objectSpread from \"/Users/aschulte/Desktop/mockups/auth-starter/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _defineProperty from \"/Users/aschulte/Desktop/mockups/auth-starter/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/aschulte/Desktop/mockups/auth-starter/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/aschulte/Desktop/mockups/auth-starter/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/aschulte/Desktop/mockups/auth-starter/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/aschulte/Desktop/mockups/auth-starter/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/aschulte/Desktop/mockups/auth-starter/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/aschulte/Desktop/mockups/auth-starter/src/components/Generate/index.js\";\nimport React, { Component } from 'react';\nimport DayPickerInput from \"react-day-picker/DayPickerInput\";\nimport \"react-day-picker/lib/style.css\";\nimport { formatDate, parseDate } from \"react-day-picker/moment\";\nimport \"moment/locale/it\";\nimport { Header, Input, Form, Button } from 'semantic-ui-react';\nimport * as ROUTES from '../../constants/routes';\nvar INITIAL_STATE = {\n  startDate: null,\n  endDate: null,\n  error: null\n};\n\nvar GenerateQRCode =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(GenerateQRCode, _Component);\n\n  function GenerateQRCode(props) {\n    var _this;\n\n    _classCallCheck(this, GenerateQRCode);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(GenerateQRCode).call(this, props));\n\n    _this.onSubmit = function (event) {\n      console.log(_this.formatDate);\n    };\n\n    _this.onChange = function (event) {\n      _this.setState(_defineProperty({}, event.target.name, event.target.value));\n    };\n\n    _this.state = _objectSpread({}, INITIAL_STATE);\n    return _this;\n  }\n\n  _createClass(GenerateQRCode, [{\n    key: \"handleDayChange\",\n    value: function handleDayChange(day) {\n      this.setState({\n        startDate: day,\n        endDate: day\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          startDate = _this$state.startDate,\n          endDate = _this$state.endDate,\n          error = _this$state.error;\n      var isInvalid = startDate === null;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(Header, {\n        as: \"h1\",\n        textAlign: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, \"Generate QR Code\"), React.createElement(Form, {\n        onSubmit: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(Form.Field, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, \"Title of event\"), React.createElement(Input, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      })), React.createElement(Form.Field, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \"Select Event Dates\"), React.createElement(DayPickerInput, {\n        formatDate: formatDate,\n        startDate: parseDate,\n        placeholder: \"\".concat(formatDate(new Date())),\n        onChange: this.handleDayChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      })), React.createElement(Form.Field, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(DayPickerInput, {\n        formatDate: formatDate,\n        endDate: parseDate,\n        placeholder: \"\".concat(formatDate(new Date())),\n        onChange: this.handleDayChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      })), React.createElement(Button, {\n        fluid: true,\n        disabled: this.isInvalid,\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \"Move to Payment\"), error && React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, error.message)));\n    }\n  }]);\n\n  return GenerateQRCode;\n}(Component);\n\nexport { GenerateQRCode as default };","map":{"version":3,"sources":["/Users/aschulte/Desktop/mockups/auth-starter/src/components/Generate/index.js"],"names":["React","Component","DayPickerInput","formatDate","parseDate","Header","Input","Form","Button","ROUTES","INITIAL_STATE","startDate","endDate","error","GenerateQRCode","props","onSubmit","event","console","log","onChange","setState","target","name","value","state","day","isInvalid","Date","handleDayChange","message"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport DayPickerInput from \"react-day-picker/DayPickerInput\";\nimport \"react-day-picker/lib/style.css\";\nimport { formatDate, parseDate } from \"react-day-picker/moment\";\nimport \"moment/locale/it\";\n\nimport { Header, Input, Form, Button } from 'semantic-ui-react'\nimport * as ROUTES from '../../constants/routes';\n\nconst INITIAL_STATE = {\n    startDate: null,\n    endDate: null,\n    error: null,\n  };\n\n  export default class GenerateQRCode extends Component {\n    constructor(props) {\n      super(props);\n      this.state = { ...INITIAL_STATE };\n    }\n  \n    onSubmit = event => {\n        console.log(this.formatDate)\n    };\n\n    handleDayChange(day) {\n        this.setState({ startDate: day, endDate: day });\n      }\n  \n    onChange = event => {\n      this.setState({ [event.target.name]: event.target.value });\n    };\n  \n    render() {\n      const { startDate, endDate, error } = this.state;\n      const isInvalid = startDate === null;\n      return (\n    \n    <div>\n    <Header as='h1' textAlign='center'>Generate QR Code</Header>\n      <Form onSubmit={this.onSubmit}>\n      <Form.Field>\n        <label>Title of event</label>\n        <Input\n            />\n        </Form.Field>\n        <Form.Field>\n        <label>Select Event Dates</label>\n        <DayPickerInput\n              formatDate={formatDate}\n              startDate={parseDate}\n              placeholder={`${formatDate(new Date())}`}\n              onChange={this.handleDayChange}\n            />\n        </Form.Field>\n        <Form.Field>\n        <DayPickerInput\n                formatDate={formatDate}\n                endDate={parseDate}\n                placeholder={`${formatDate(new Date())}`}\n                onChange={this.handleDayChange}\n              />\n        </Form.Field>\n        <Button fluid disabled={this.isInvalid} type=\"submit\">\n          Move to Payment\n        </Button>\n\n        {error && <p>{error.message}</p>}\n      </Form>\n      </div>\n);\n}}"]},"metadata":{},"sourceType":"module"}