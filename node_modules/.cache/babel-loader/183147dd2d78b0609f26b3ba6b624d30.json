{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/aschulte/Desktop/mockups/auth-starter/src/components/Generate/index.js\";\n\nimport React from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { compose } from 'recompose';\nimport { Header, Segment, Grid, Input, Form, Button } from 'semantic-ui-react';\nimport { withAuthorization, withEmailVerification } from '../Session';\n\nvar GenerateQRCode = function GenerateQRCode() {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, React.createElement(Header, {\n    as: \"h1\",\n    textAlign: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, \"Generate QR Code\"), React.createElement(Form, {\n    onSubmit: _this.onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, React.createElement(Form.Field, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, \"Start Date\"), React.createElement(DatePicker, {\n    name: \"startDate\" // selected={this.state.startDate}\n    ,\n    value: startDate // onChange={this.handleChange}\n    ,\n    onChange: _this.onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  })), React.createElement(Form.Field, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"End Date\"), React.createElement(DatePicker, {\n    name: \"endDate\" // selected={this.state.startDate}\n    ,\n    value: endDate // onChange={this.handleChange}\n    ,\n    onChange: _this.onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  })), React.createElement(Form.Field, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"Retype Password\"), React.createElement(Input, {\n    name: \"passwordOne\",\n    value: passwordOne,\n    onChange: _this.onChange,\n    type: \"password\",\n    placeholder: \"Password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  })), React.createElement(Button, {\n    fluid: true,\n    disabled: isInvalid,\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"Generate QR Code\"), error && React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, error.message)));\n};\n\nvar condition = function condition(authUser) {\n  return !!authUser;\n};\n\nexport default compose(withEmailVerification, withAuthorization(condition))(GenerateQRCode);","map":{"version":3,"sources":["/Users/aschulte/Desktop/mockups/auth-starter/src/components/Generate/index.js"],"names":["React","DatePicker","compose","Header","Segment","Grid","Input","Form","Button","withAuthorization","withEmailVerification","GenerateQRCode","onSubmit","startDate","onChange","endDate","passwordOne","isInvalid","error","message","condition","authUser"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAO,4CAAP;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,SAASC,MAAT,EAAiBC,OAAjB,EAA0BC,IAA1B,EAAgCC,KAAhC,EAAuCC,IAAvC,EAA6CC,MAA7C,QAA2D,mBAA3D;AACA,SAASC,iBAAT,EAA4BC,qBAA5B,QAAyD,YAAzD;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB;AAAA,SACnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,MAAD;AAAQ,IAAA,EAAE,EAAC,IAAX;AAAgB,IAAA,SAAS,EAAC,QAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADA,EAEE,oBAAC,IAAD;AAAM,IAAA,QAAQ,EAAE,KAAI,CAACC,QAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADC,EAEC,oBAAC,UAAD;AACE,IAAA,IAAI,EAAC,WADP,CAEA;AAFA;AAGE,IAAA,KAAK,EAAEC,SAHT,CAIE;AAJF;AAKE,IAAA,QAAQ,EAAE,KAAI,CAACC,QALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFD,CADD,EAWE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,EAEA,oBAAC,UAAD;AACE,IAAA,IAAI,EAAC,SADP,CAEA;AAFA;AAGE,IAAA,KAAK,EAAEC,OAHT,CAIE;AAJF;AAKE,IAAA,QAAQ,EAAE,KAAI,CAACD,QALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFA,CAXF,EAqBE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADA,EAEA,oBAAC,KAAD;AACE,IAAA,IAAI,EAAC,aADP;AAEE,IAAA,KAAK,EAAEE,WAFT;AAGE,IAAA,QAAQ,EAAE,KAAI,CAACF,QAHjB;AAIE,IAAA,IAAI,EAAC,UAJP;AAKE,IAAA,WAAW,EAAC,UALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFA,CArBF,EAgCE,oBAAC,MAAD;AAAQ,IAAA,KAAK,MAAb;AAAc,IAAA,QAAQ,EAAEG,SAAxB;AAAmC,IAAA,IAAI,EAAC,QAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAhCF,EAoCGC,KAAK,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIA,KAAK,CAACC,OAAV,CApCZ,CAFF,CADmB;AAAA,CAAvB;;AA4CA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAAAC,QAAQ;AAAA,SAAI,CAAC,CAACA,QAAN;AAAA,CAA1B;;AAEA,eAAenB,OAAO,CACpBQ,qBADoB,EAEpBD,iBAAiB,CAACW,SAAD,CAFG,CAAP,CAGbT,cAHa,CAAf","sourcesContent":["import React from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { compose } from 'recompose';\nimport { Header, Segment, Grid, Input, Form, Button } from 'semantic-ui-react'\nimport { withAuthorization, withEmailVerification } from '../Session';\n\nconst GenerateQRCode = () => (\n    <div>\n    <Header as='h1' textAlign='center'>Generate QR Code</Header>\n      <Form onSubmit={this.onSubmit}>\n       <Form.Field>\n      <label>Start Date</label>\n        <DatePicker\n          name=\"startDate\"\n        // selected={this.state.startDate}\n          value={startDate}\n          // onChange={this.handleChange}\n          onChange={this.onChange}\n        />\n        </Form.Field>\n        <Form.Field>\n        <label>End Date</label>\n        <DatePicker\n          name=\"endDate\"\n        // selected={this.state.startDate}\n          value={endDate}\n          // onChange={this.handleChange}\n          onChange={this.onChange}\n        />\n        </Form.Field>\n        <Form.Field>\n        <label>Retype Password</label>\n        <Input\n          name=\"passwordOne\"\n          value={passwordOne}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"Password\"\n        />\n        </Form.Field>\n        \n        <Button fluid disabled={isInvalid} type=\"submit\">\n          Generate QR Code\n        </Button>\n\n        {error && <p>{error.message}</p>}\n      </Form>\n      </div>\n);\n\nconst condition = authUser => !!authUser;\n\nexport default compose(\n  withEmailVerification,\n  withAuthorization(condition),\n)(GenerateQRCode);"]},"metadata":{},"sourceType":"module"}