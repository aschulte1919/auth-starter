{"ast":null,"code":"import _classCallCheck from \"/Users/aschulte/Desktop/mockups/react-redux-firebase-authentication/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/aschulte/Desktop/mockups/react-redux-firebase-authentication/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/aschulte/Desktop/mockups/react-redux-firebase-authentication/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/aschulte/Desktop/mockups/react-redux-firebase-authentication/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/aschulte/Desktop/mockups/react-redux-firebase-authentication/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/aschulte/Desktop/mockups/react-redux-firebase-authentication/src/components/Session/withEmailVerification.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'recompose';\nimport { withFirebase } from '../Firebase';\n\nvar needsEmailVerification = function needsEmailVerification(authUser) {\n  return authUser && !authUser.emailVerified && authUser.providerData.map(function (provider) {\n    return provider.providerId;\n  }).includes('password');\n};\n\nvar withEmailVerification = function withEmailVerification(Component) {\n  var WithEmailVerification =\n  /*#__PURE__*/\n  function (_React$Component) {\n    _inherits(WithEmailVerification, _React$Component);\n\n    function WithEmailVerification(props) {\n      var _this;\n\n      _classCallCheck(this, WithEmailVerification);\n\n      _this = _possibleConstructorReturn(this, _getPrototypeOf(WithEmailVerification).call(this, props));\n\n      _this.onSendEmailVerification = function () {\n        _this.props.firebase.doSendEmailVerification().then(function () {\n          return _this.setState({\n            isSent: true\n          });\n        });\n      };\n\n      _this.state = {\n        isSent: false\n      };\n      return _this;\n    }\n\n    _createClass(WithEmailVerification, [{\n      key: \"render\",\n      value: function render() {\n        return needsEmailVerification(this.props.authUser) ? React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30\n          },\n          __self: this\n        }, this.state.isSent ? React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        }, \"E-Mail confirmation sent: Check you E-Mails (Spam folder included) for a confirmation E-Mail. Refresh this page once you confirmed your E-Mail.\") : React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38\n          },\n          __self: this\n        }, \"Verify your E-Mail: Check you E-Mails (Spam folder included) for a confirmation E-Mail or send another confirmation E-Mail.\"), React.createElement(Button, {\n          onClick: this.onSendEmailVerification,\n          disabled: this.state.isSent,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }, \"Send confirmation E-Mail\")) : React.createElement(Component, Object.assign({}, this.props, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }));\n      }\n    }]);\n\n    return WithEmailVerification;\n  }(React.Component);\n\n  var mapStateToProps = function mapStateToProps(state) {\n    return {\n      authUser: state.sessionState.authUser\n    };\n  };\n\n  return compose(withFirebase, connect(mapStateToProps))(WithEmailVerification);\n};\n\nexport default withEmailVerification;","map":{"version":3,"sources":["/Users/aschulte/Desktop/mockups/react-redux-firebase-authentication/src/components/Session/withEmailVerification.js"],"names":["React","connect","compose","withFirebase","needsEmailVerification","authUser","emailVerified","providerData","map","provider","providerId","includes","withEmailVerification","Component","WithEmailVerification","props","onSendEmailVerification","firebase","doSendEmailVerification","then","setState","isSent","state","mapStateToProps","sessionState"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,QAAwB,WAAxB;AAEA,SAASC,YAAT,QAA6B,aAA7B;;AAEA,IAAMC,sBAAsB,GAAG,SAAzBA,sBAAyB,CAAAC,QAAQ;AAAA,SACrCA,QAAQ,IACR,CAACA,QAAQ,CAACC,aADV,IAEAD,QAAQ,CAACE,YAAT,CACGC,GADH,CACO,UAAAC,QAAQ;AAAA,WAAIA,QAAQ,CAACC,UAAb;AAAA,GADf,EAEGC,QAFH,CAEY,UAFZ,CAHqC;AAAA,CAAvC;;AAOA,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAwB,CAAAC,SAAS,EAAI;AAAA,MACnCC,qBADmC;AAAA;AAAA;AAAA;;AAEvC,mCAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,iGAAMA,KAAN;;AADiB,YAMnBC,uBANmB,GAMO,YAAM;AAC9B,cAAKD,KAAL,CAAWE,QAAX,CACGC,uBADH,GAEGC,IAFH,CAEQ;AAAA,iBAAM,MAAKC,QAAL,CAAc;AAAEC,YAAAA,MAAM,EAAE;AAAV,WAAd,CAAN;AAAA,SAFR;AAGD,OAVkB;;AAGjB,YAAKC,KAAL,GAAa;AAAED,QAAAA,MAAM,EAAE;AAAV,OAAb;AAHiB;AAIlB;;AANsC;AAAA;AAAA,+BAc9B;AACP,eAAOjB,sBAAsB,CAAC,KAAKW,KAAL,CAAWV,QAAZ,CAAtB,GACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACG,KAAKiB,KAAL,CAAWD,MAAX,GACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6JADD,GAOC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yIARJ,EAeE,oBAAC,MAAD;AACE,UAAA,OAAO,EAAE,KAAKL,uBADhB;AAEE,UAAA,QAAQ,EAAE,KAAKM,KAAL,CAAWD,MAFvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAfF,CADK,GAwBL,oBAAC,SAAD,oBAAe,KAAKN,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAxBF;AA0BD;AAzCsC;;AAAA;AAAA,IACLf,KAAK,CAACa,SADD;;AA4CzC,MAAMU,eAAe,GAAG,SAAlBA,eAAkB,CAAAD,KAAK;AAAA,WAAK;AAChCjB,MAAAA,QAAQ,EAAEiB,KAAK,CAACE,YAAN,CAAmBnB;AADG,KAAL;AAAA,GAA7B;;AAIA,SAAOH,OAAO,CACZC,YADY,EAEZF,OAAO,CAACsB,eAAD,CAFK,CAAP,CAGLT,qBAHK,CAAP;AAID,CApDD;;AAsDA,eAAeF,qBAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'recompose';\n\nimport { withFirebase } from '../Firebase';\n\nconst needsEmailVerification = authUser =>\n  authUser &&\n  !authUser.emailVerified &&\n  authUser.providerData\n    .map(provider => provider.providerId)\n    .includes('password');\n\nconst withEmailVerification = Component => {\n  class WithEmailVerification extends React.Component {\n    constructor(props) {\n      super(props);\n\n      this.state = { isSent: false };\n    }\n\n    onSendEmailVerification = () => {\n      this.props.firebase\n        .doSendEmailVerification()\n        .then(() => this.setState({ isSent: true }));\n    };\n\n    render() {\n      return needsEmailVerification(this.props.authUser) ? (\n        <div>\n          {this.state.isSent ? (\n            <p>\n              E-Mail confirmation sent: Check you E-Mails (Spam folder\n              included) for a confirmation E-Mail. Refresh this page\n              once you confirmed your E-Mail.\n            </p>\n          ) : (\n            <p>\n              Verify your E-Mail: Check you E-Mails (Spam folder\n              included) for a confirmation E-Mail or send another\n              confirmation E-Mail.\n            </p>\n          )}\n\n          <Button\n            onClick={this.onSendEmailVerification}\n            disabled={this.state.isSent}\n          >\n            Send confirmation E-Mail\n          </Button>\n        </div>\n      ) : (\n        <Component {...this.props} />\n      );\n    }\n  }\n\n  const mapStateToProps = state => ({\n    authUser: state.sessionState.authUser,\n  });\n\n  return compose(\n    withFirebase,\n    connect(mapStateToProps),\n  )(WithEmailVerification);\n};\n\nexport default withEmailVerification;\n"]},"metadata":{},"sourceType":"module"}