{"ast":null,"code":"import _objectSpread from \"/Users/aschulte/Desktop/mockups/react-redux-firebase-authentication/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/aschulte/Desktop/mockups/react-redux-firebase-authentication/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/aschulte/Desktop/mockups/react-redux-firebase-authentication/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/aschulte/Desktop/mockups/react-redux-firebase-authentication/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/aschulte/Desktop/mockups/react-redux-firebase-authentication/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/aschulte/Desktop/mockups/react-redux-firebase-authentication/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/aschulte/Desktop/mockups/react-redux-firebase-authentication/src/components/Users/UserList.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { compose } from 'recompose';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\n\nvar UserList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(UserList, _Component);\n\n  function UserList(props) {\n    var _this;\n\n    _classCallCheck(this, UserList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(UserList).call(this, props));\n    _this.state = {\n      loading: false\n    };\n    return _this;\n  }\n\n  _createClass(UserList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      if (!this.props.users.length) {\n        this.setState({\n          loading: true\n        });\n      }\n\n      this.props.firebase.users().on('value', function (snapshot) {\n        _this2.props.onSetUsers(snapshot.val());\n\n        _this2.setState({\n          loading: false\n        });\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.props.firebase.users().off();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var users = this.props.users;\n      var loading = this.state.loading;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, \"Users\"), loading && React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, \"Loading ...\"), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, users.map(function (user) {\n        return React.createElement(\"li\", {\n          key: user.uid,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }, React.createElement(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        }, \"ID:\"), \" \", user.uid), React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }, React.createElement(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }, \"E-Mail:\"), \" \", user.email), React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }, React.createElement(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }, \"Username:\"), \" \", user.username), React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: \"\".concat(ROUTES.ADMIN, \"/\").concat(user.uid),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }, \"Details\")));\n      })));\n    }\n  }]);\n\n  return UserList;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    users: Object.keys(state.userState.users || {}).map(function (key) {\n      return _objectSpread({}, state.userState.users[key], {\n        uid: key\n      });\n    })\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onSetUsers: function onSetUsers(users) {\n      return dispatch({\n        type: 'USERS_SET',\n        users: users\n      });\n    }\n  };\n};\n\nexport default compose(withFirebase, connect(mapStateToProps, mapDispatchToProps))(UserList);","map":{"version":3,"sources":["/Users/aschulte/Desktop/mockups/react-redux-firebase-authentication/src/components/Users/UserList.js"],"names":["React","Component","Link","connect","compose","withFirebase","ROUTES","UserList","props","state","loading","users","length","setState","firebase","on","snapshot","onSetUsers","val","off","map","user","uid","email","username","ADMIN","mapStateToProps","Object","keys","userState","key","mapDispatchToProps","dispatch","type"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { compose } from 'recompose';\n\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\n\nclass UserList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loading: false,\n    };\n  }\n\n  componentDidMount() {\n    if (!this.props.users.length) {\n      this.setState({ loading: true });\n    }\n\n    this.props.firebase.users().on('value', snapshot => {\n      this.props.onSetUsers(snapshot.val());\n\n      this.setState({ loading: false });\n    });\n  }\n\n  componentWillUnmount() {\n    this.props.firebase.users().off();\n  }\n\n  render() {\n    const { users } = this.props;\n    const { loading } = this.state;\n\n    return (\n      <div>\n        <h2>Users</h2>\n        {loading && <div>Loading ...</div>}\n        <ul>\n          {users.map(user => (\n            <li key={user.uid}>\n              <span>\n                <strong>ID:</strong> {user.uid}\n              </span>\n              <span>\n                <strong>E-Mail:</strong> {user.email}\n              </span>\n              <span>\n                <strong>Username:</strong> {user.username}\n              </span>\n              <span>\n                <Link to={`${ROUTES.ADMIN}/${user.uid}`}>\n                  Details\n                </Link>\n              </span>\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  users: Object.keys(state.userState.users || {}).map(key => ({\n    ...state.userState.users[key],\n    uid: key,\n  })),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onSetUsers: users => dispatch({ type: 'USERS_SET', users }),\n});\n\nexport default compose(\n  withFirebase,\n  connect(\n    mapStateToProps,\n    mapDispatchToProps,\n  ),\n)(UserList);\n"]},"metadata":{},"sourceType":"module"}